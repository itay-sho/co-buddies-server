{"version":3,"sources":["Message.js","ErrorCodes.js","context/chat-context.js","ChatBox.js","ReiszeableTextarea.js","ChatInput.js","ChatContainer.js","PageFooter.js","App.js","serviceWorker.js","index.js"],"names":["Message","props","text","author","userId","user_id","storedUserId","localStorage","getItem","messageExtraClasses","toString","extra_style","className","style","direction","search","get_direction","ErrorCodes","OK","UNAUTHENTICATED","CONVERSATION_CLOSED","SCHEMA_ERROR","UNIMPLEMENTED","CONVERSATION_NOT_INITIALIZED","AUTHENTICATION_TIMEOUT","AUTH_FAIL_USER_INACTIVE","AUTH_FAIL_INVALID_TOKEN","INACTIVENESS_TIMEOUT","UNKNOWN_ERROR","ChatContext","React","createContext","conversationId","setConversationId","websocket","setWebsocket","getNextSequenceNumber","ChatContextProvider","useState","sequenceNumber","setSequenceNumber","Provider","value","children","ChatBox","messages","updateMessages","sound","setSound","namesDictionaryRef","useRef","0","pendingResponseRef","chatBoxRef","websocketRef","chatContext","useContext","addPendingResponse","sequence","callback","console","log","to_append","current","update","$set","addToMessageList","newMessage","previousMessage","$push","randomizeKey","crypto","randomBytes","generateMessage","key","generateAdminMessage","sendMatchRequest","match_request","JSON","stringify","request_type","seq","payload","send","onMatchRequest","onLoginSuccess","wsOnOpen","event","login_request","wsOnClose","wsOnMessage","data","message","parse","error_code","response_to","dir","removeItem","error_message","handleErrorMessage","userID","attendees","Object","entries","attendee_id","attendee_name","newNameDict","conversation_id","onReceiveMatch","author_id","play","onReceiveMessage","userName","onReceiveDisconnect","handleUnknownMessage","useEffect","undefined","WebSocket","process","onopen","onclose","onmessage","scroll","top","scrollHeight","behavior","soundManger","soundManager","onready","newSound","createSound","url","backgroundImage","ref","map","ResizableTextarea","forwardRef","enterAction","disabled","rows","minRows","maxRows","textareaState","setTextAreaState","resize","width","lineHeight","setStyle","maxLength","placeholder","onKeyDown","e","keyCode","shiftKey","preventDefault","target","onChange","previousRows","textarea","currentRows","scrollTop","ChatInput","textareaRef","sendMessage","updateTextareaState","length","alt","src","onClick","ChatContainer","pageState","updatePageState","fullName","age","reasonToIsolation","formState","setFormState","inputChanged","targetName","name","handleSubmit","username","password","axios","post","password1","password2","reason_to_isolation","then","response","status","setItem","id","alert","onSubmit","type","required","min","render_page","PageFooter","href","App","Boolean","window","location","hostname","match","defaults","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"saAoCeA,G,cAhCC,SAACC,GACb,IAAMC,EAAOD,EAAMC,KACbC,EAASF,EAAME,OACfC,EAASH,EAAMI,QACfC,EAAeC,aAAaC,QAAQ,WACpCC,EAAuBL,EAAOM,aAAeJ,EAAgB,eAAgB,gBAE7EK,EAAc,GACL,IAAXP,IACAO,EAAW,MAAY,OAW3B,OACI,yBAAKC,UAAW,WAAaH,GACzB,yBAAKG,UAAU,iBAAiBC,MAAOF,GAClC,CAACR,IAEN,yBAAKS,UAAU,eAAeC,MAAO,CAACC,UAbxB,SAACZ,GACnB,OAAe,MAAXA,EAAK,IAAcA,EAAK,GAAGa,OAAO,mBAAqB,EAChD,MAEJ,MAS8CC,CAAcd,KAC1DA,MCdFe,EAhBI,CACfC,GAAI,EACJC,gBAAiB,IACjBC,oBAAqB,IACrBC,aAAc,IACdC,cAAe,IACfC,6BAA8B,IAC9BC,uBAAwB,IACxBC,wBAAyB,IACzBC,wBAAyB,IACzBC,qBAAsB,IACtBC,cAAe,K,kCCTNC,EAAcC,IAAMC,cAAc,CAC3CC,eAAgB,EAChBC,kBAAmB,aACnBC,UAAW,KACXC,aAAc,aACdC,sBAAuB,eAwBZC,EArBa,SAAApC,GAAU,IAAD,EACWqC,mBAAS,GADpB,mBAC1BN,EAD0B,KACVC,EADU,OAECK,mBAAS,MAFV,mBAE1BJ,EAF0B,KAEfC,EAFe,OAGWG,mBAAS,GAHpB,mBAG1BC,EAH0B,KAGVC,EAHU,KAUjC,OAAO,kBAACX,EAAYY,SAAb,CAAsBC,MAAO,CAChCV,eAAgBA,EAChBC,kBAAmBA,EACnBC,UAAWA,EACXC,aAAcA,EACdC,sBAV0B,WAE1B,OADAI,EAAkBD,EAAiB,GAC5BA,KAUNtC,EAAM0C,W,iBC+LAC,EAhNC,WAAO,IAAD,EACiBN,mBAAS,IAD1B,mBACXO,EADW,KACDC,EADC,OAEQR,mBAAS,MAFjB,mBAEXS,EAFW,KAEJC,EAFI,KAGZC,EAAqBC,iBAAO,CAACC,EAAG,kEAChCC,EAAqBF,iBAAO,IAC5BG,EAAaH,mBACbI,EAAeJ,mBACfK,EAAcC,qBAAW3B,GACzBvB,EAAeC,aAAaC,QAAQ,WAEpCiD,EAAqB,SAACC,EAAUC,GAClCC,QAAQC,IAAI,WACZ,IAAIC,EAAY,GAChBA,EAAUJ,GAAYC,EACtBP,EAAmBW,QAAUC,IAAOZ,EAAmBW,QAAS,CAACE,KAAKH,KAWpEI,EAAmB,SAACC,GACtBrB,GAAe,SAAAsB,GACX,OAAOJ,IAAOI,EAAiB,CAACC,MAAO,CAACF,SAI1CG,EAAe,kBAAMC,IAAOC,YAAY,IAAI9D,SAAS,QAErD+D,EAAkB,SAACpE,EAASH,GAAU,MAAO,CAACG,QAASA,EAAS,KAAQH,EAAMwE,IAAKJ,MACnFK,EAAuB,SAAAzE,GAAI,OAAIuE,EAAgB,EAAGvE,IAuClD0E,EAAmB,WACrB,IAAMrC,EAAiBgB,EAAYnB,wBAC7ByC,EAAgBC,KAAKC,UAAU,CACjCC,aAAc,gBACdC,IAAK1C,EACL2C,QAAS,KAGb5B,EAAaS,QAAQoB,KAAKN,GAC1BjB,QAAQC,IAAI,uBACZJ,EAAmBlB,EAAgB6C,IAGjCC,EAAiB,WACnBnB,EAAiBS,EAAqB,+EACtCC,KAGEQ,EAAiB,WACnBlB,EAAiBS,EAAqB,2GAyCpCW,EAAW,SAACC,GACd,IAAMrD,EAAYoB,EAAaS,QACzBxB,EAAiBgB,EAAYnB,wBAC7BoD,EAAgBV,KAAKC,UAAU,CACjCC,aAAc,eACdC,IAAK1C,EACL2C,QAAS,CAAC,aAAgB3E,aAAaC,QAAQ,cAGnD0B,EAAUiD,KAAKK,GACf/B,EAAmBlB,EAAgB8C,IAGjCI,EAAY,SAACF,GACfrB,EAAiBS,EAAqB,4JAGpCe,EAAa,SAACH,GAChB3B,QAAQC,IAAI,gBAAkB0B,EAAMI,MACpC,IAAMC,EAAUd,KAAKe,MAAMN,EAAMI,MAEjC,OAAQC,EAAQZ,cACZ,IAAK,QACD,OAxHe,SAACY,GACxB,OAAQA,EAAQV,QAAQY,YACpB,KAAK7E,EAAWC,GACuB,MAA/B0E,EAAQV,QAAQa,cAChBnC,QAAQoC,IAAI5C,EAAmBW,SAC/BH,QAAQC,IAAI+B,EAAQV,QAAQa,aACxBH,EAAQV,QAAQa,eAAe3C,EAAmBW,QAClDX,EAAmBW,QAAQ6B,EAAQV,QAAQa,eAE3CnC,QAAQC,IAAI,kCAAoC+B,EAAQV,QAAQa,cAGxE,MACJ,KAAK9E,EAAWS,wBAChB,KAAKT,EAAWQ,wBACZyC,EAAiBS,EAAqB,iOACtCpE,aAAa0F,WAAW,WACxB,MACJ,KAAKhF,EAAWO,uBACZ0C,EAAiBS,EAAqB,yHACtC,MACJ,KAAK1D,EAAWU,qBACZuC,EAAiBS,EAAqB,yIAEtCpB,EAAYtB,kBAAkB,GAC9B,MACJ,QACIiC,EAAiBS,EAAqB,kBAAD,OAAmBiB,EAAQV,QAAQY,WAAnC,YAAiDF,EAAQV,QAAQgB,kBA6F/FC,CAAmBP,GAC9B,IAAK,gBACD,OA/DW,SAACA,GACpB,IAAMQ,EAAS7F,aAAaC,QAAQ,WAChC6F,EAAY,GAChBzC,QAAQC,IAAI+B,EAAQV,QAAQmB,WAC5B,cAAyCC,OAAOC,QAAQX,EAAQV,QAAQmB,WAAxE,eAAoF,CAAC,IAAD,sBAA1EG,EAA0E,KAA7DC,EAA6D,KAC5EL,IAAWI,IACXH,GAAaI,GAGjB,IAAIC,EAAW,eAAOzD,EAAmBc,SACzC2C,EAAYF,GAAeC,EAC3BxD,EAAmBc,QAAU2C,EAGjCxC,EAAiBS,EAAqB,4DAAiB0B,IAEvD9C,EAAYtB,kBAAkB2D,EAAQV,QAAQyB,iBA+C/BC,CAAehB,GAC1B,IAAK,kBACD,OA9Ca,SAACA,GACR,OAAV7C,GAAkB6C,EAAQV,QAAQ2B,UAAUnG,aAAeJ,GAC3DyC,EAAM+D,OAEV5C,EAAiBO,EAAgBmB,EAAQV,QAAQ2B,UAAWjB,EAAQV,QAAQhF,OA0C7D6G,CAAiBnB,GAC5B,IAAK,aACD,OAzCgB,SAACA,GACzBhC,QAAQC,IAAI+B,EAAQV,SACpBtB,QAAQC,IAAIZ,EAAmBc,SAC/BH,QAAQC,IAAIZ,EAAmBc,QAAQ6B,EAAQV,QAAQ7E,UAEvD,IAAM2G,EAAW/D,EAAmBc,QAAQ6B,EAAQV,QAAQ7E,SAC5D6D,EAAiBS,EAAqB,GAAD,OAAIqC,EAAJ,sEAErCzD,EAAYtB,kBAAkB,GAC9B2C,IAgCeqC,CAAoBrB,GAC/B,QACI,OA/FiB,SAACA,GAC1B1B,EAAiBS,EAAqB,gFAAsBG,KAAKC,UAAUa,KA8F5DsB,CAAqBtB,KAIxCuB,qBAAU,WACNvD,QAAQC,IAAI,kBAEiBuD,IAAzB9D,EAAaS,UACbH,QAAQC,IAAI,yBAEZP,EAAaS,QAAU,IAAIsD,UAAUC,+BACrCpD,EAAiB,CAACQ,IAAKJ,IAAgBjE,QAAS,EAAE,KAAQ,6EAG9DiD,EAAaS,QAAQwD,OAASjC,EAC9BhC,EAAaS,QAAQyD,QAAU/B,EAC/BnC,EAAaS,QAAQ0D,UAAY/B,EACjCnC,EAAYpB,aAAamB,EAAaS,SAEtCV,EAAWU,QAAQ2D,OAAO,CAACC,IAAKtE,EAAWU,QAAQ6D,aAAcC,SAAU,aAC5E,CAACvE,EAAcgC,EAAUG,EAAWC,IAEvCyB,qBAAU,WACNW,IAAYC,aAAaC,SAAQ,WAC7B,GAAc,OAAVjF,EAAgB,CAChB,IAAMkF,EAAWH,IAAYC,aAAaG,YAAY,CAClDC,IAAI,GAAD,OAAKb,kCAAL,sBAEPtE,EAASiF,SAGlB,IAEH,IAAMpH,EAAQ,CACVuH,gBAAgB,OAAD,OAASd,kCAAT,kBAGnB,OACI,yBAAK1G,UAAU,UAAUyH,IAAKhF,EAAYxC,MAAOA,GAC5CgC,EAASyF,KA1LK,SAAC1C,GACpB,OACI,yBAAKlB,IAAKkB,EAAQlB,IAAK9D,UAAU,OAC7B,kBAAC,EAAD,CAASV,KAAM0F,EAAQ1F,KAAMC,OAAQ8C,EAAmBc,QAAQ6B,EAAQvF,SAAUA,QAASuF,EAAQvF,gBC+CpGkI,G,OA3EWzG,IAAM0G,YAAW,SAACvI,EAAOoI,GAC/C,IAAMI,EAAcxI,EAAMwI,YACpBC,EAAWzI,EAAMyI,SAFgC,EAIbpG,mBAAS,CAC/CqG,KAAM1I,EAAM0I,KACZC,QAAS3I,EAAM2I,QACfC,QAAS5I,EAAM4I,QACfnG,MAAO,KAR4C,mBAIhDoG,EAJgD,KAIjCC,EAJiC,OAU7BzG,mBAAS,CAAC0G,OAAQ,OAAQC,MAAO,OAAQC,WAAY,OAAQpI,UAAW,QAV3C,mBAUhDD,EAVgD,KAUzCsI,EAVyC,KAWvDd,EAAItE,QAAU,CAAC+E,EAAeC,GAiD9B,OACI,8BACIL,SAAUA,EACVU,UAAU,MACVT,KAAMG,EAAcH,KACpBU,YAAY,kEACZzI,UAAU,qBACV0I,UA/CW,SAACC,GAChB,GAAiB,KAAdA,EAAEC,UAAiC,IAAfD,EAAEE,SAAoB,CACzCF,EAAEG,iBACYH,EAAEI,OAAOjH,MACvB+F,MA4CAmB,SAxCa,SAACrE,GAClB,IACQqD,EAAqBE,EAArBF,QAASC,EAAYC,EAAZD,QAEXgB,EAAetE,EAAMoE,OAAOhB,KAClCpD,EAAMoE,OAAOhB,KAAOC,EAGpB,IAvBmBkB,EAuBbC,MAAkBxE,EAAMoE,OAAO/B,aAAe,IAPzB,IASvBmC,IAAgBF,IAChBtE,EAAMoE,OAAOhB,KAAOoB,GAGpBA,GAAelB,IACftD,EAAMoE,OAAOhB,KAAOE,EACpBtD,EAAMoE,OAAOK,UAAYzE,EAAMoE,OAAO/B,cAI1CuB,EAAS,eACFtI,EADC,CAEJC,WArCegJ,EAqCUvE,EAAMoE,OApCV,MAArBG,EAASpH,MAAM,IAAcoH,EAASpH,MAAM,GAAG3B,OAAO,mBAAqB,EACpE,MAEJ,UAoCPgI,EAAiB,eACVD,EADS,CAEZH,KAAMoB,EAAclB,EAAUkB,EAAclB,EAC5CnG,MAAO6C,EAAMoE,OAAOjH,UAapB7B,MAAOA,EACP6B,MAAOoG,EAAcpG,YC3BlBuH,G,OAvCG,WACd,IAAM1G,EAAcC,qBAAW3B,GACzB6G,EAA0C,IAA/BnF,EAAYvB,eACvBkI,EAAchH,mBAEdiH,EAAc,WAAO,IAAD,cACuBD,EAAYnG,QADnC,GACf+E,EADe,KACAsB,EADA,KAEhB1H,EAAQoG,EAAcpG,MAE5B,IAAIgG,GAA6B,IAAjBhG,EAAM2H,OAAtB,CAGA,IAAM9H,EAAiBgB,EAAYnB,wBAE/BwD,EAAUd,KAAKC,UAAU,CACzBC,aAAc,eACdC,IAAK1C,EACL2C,QAAS,CACLhF,KAAMwC,KAId0H,EAAoB,eAAItB,EAAL,CAAoBpG,MAAO,MAC9Ca,EAAYrB,UAAUiD,KAAKS,KAG/B,OAEI,yBAAKhF,UAAU,qBACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAmByH,IAAK6B,EAAavB,KAAK,IAAIC,QAAQ,IAAIC,QAAQ,IAAIJ,YAAa0B,EAAazB,SAAUA,IAC1G,yBAAK9H,UAAU,oDACX,yBAAK0J,IAAI,OAAOC,IAAKjD,kDAA6C1G,UAAU,cAAc4J,QAASL,S,iBCuDxGM,EArFO,WAAO,IAAD,EACanI,mBAA6C,OAApC/B,aAAaC,QAAQ,WAAsB,OAAQ,WADzE,mBACjBkK,EADiB,KACNC,EADM,OAEUrI,mBAAS,CACvCsI,SAAU,GACVC,IAAK,GACLC,kBAAmB,KALC,mBAEjBC,EAFiB,KAENC,EAFM,KAOlBC,EAAe,SAAC1B,GAClB,IAAM2B,EAAa3B,EAAEI,OAAOwB,KAC5BH,EAAa,eACND,EADK,eAEPG,EAAa3B,EAAEI,OAAOjH,UAIzB0I,EAAe,SAAC7B,GAClBA,EAAEG,iBACF,IAAM2B,EAAW9G,IAAOC,YAAY,IAAI9D,SAAS,OAC3C4K,EAAW/G,IAAOC,YAAY,IAAI9D,SAAS,OAEjD6K,IAAMC,KAAK,iBAAkB,CACzBH,SAAUA,EACVI,UAAWH,EACXI,UAAWJ,EACXH,KAAMJ,EAAUH,SAChBe,oBAAqBZ,EAAUD,kBAC/BD,IAAKE,EAAUF,MAChBe,MAAK,SAAAC,GACoB,MAApBA,EAASC,QACTvL,aAAawL,QAAQ,UAAWF,EAASlG,KAAKjB,KAC9CnE,aAAawL,QAAQ,UAAWF,EAASlG,KAAKqG,IAC9CrB,EAAgB,SAEhBsB,MAAMJ,EAASC,YA6C3B,OACI,yBAAKlL,UAAU,2BAzCC,WAChB,OAAQ8J,GACJ,IAAK,OACD,OACI,yBAAK9J,UAAU,gCACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGZ,IAAK,UACD,OACI,yBAAKA,UAAU,uDACX,yBAAKA,UAAU,mCACX,yBAAK2J,IAAKjD,2CAAsCgD,IAAI,OAAO1J,UAAU,SACrE,sIAEI,6BAFJ,4PAKA,0BAAMsL,SAAUd,GACZ,yBAAKxK,UAAU,OACX,2BAAOuL,KAAK,OAAOvC,SAAUqB,EAAcvI,MAAOqI,EAAUH,SAAUO,KAAK,WAAW9B,YAAY,eAAKzI,UAAU,aAAawL,UAAU,KAE5I,yBAAKxL,UAAU,OACX,2BAAOuL,KAAK,SAASvC,SAAUqB,EAAcvI,MAAOqI,EAAUF,IAAKM,KAAK,MAAM9B,YAAY,qBAAMgD,IAAI,IAAIzL,UAAU,aAAawL,UAAU,KAE7I,yBAAKxL,UAAU,OACX,8BAAUgJ,SAAUqB,EAAcvI,MAAOqI,EAAUD,kBAAmBzB,YAAY,0DAAa8B,KAAK,oBAAoBvK,UAAU,aAAawI,UAAU,MAAMgD,UAAU,KAE7K,yBAAKxL,UAAU,OACX,2BAAOuL,KAAK,SAASvL,UAAU,yBAAyB8B,MAAM,8EAMtF,QACI,OAAO,MAKV4J,KCnEEC,G,OAjBI,WAGf,OACI,yBAAK3L,UAAU,2BACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,cAAf,2BAC4B,uBAAG4L,KALvB,4FAKoB,kBAE5B,yBAAK5L,UAAU,eACX,uBAAG4L,KATC,iDASJ,cADJ,wBCGDC,G,cATH,WACR,OACI,yBAAK7L,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,SCCQ8L,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNvB,IAAMwB,SAASC,QAAU1F,4BAEzB2F,IAASC,OACL,kBAAC,EAAD,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3B,MAAK,SAAA4B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/J,QAAQ+J,MAAMA,EAAM/H,a","file":"static/js/main.8aaac3e1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Message.scss';\r\n\r\nconst Message = (props) => {\r\n    const text = props.text;\r\n    const author = props.author;\r\n    const userId = props.user_id;\r\n    const storedUserId = localStorage.getItem('USER_ID');\r\n    const messageExtraClasses = (userId.toString() === storedUserId) ? \"message-self\": \"message-other\";\r\n\r\n    const extra_style = {};\r\n    if (userId === 0) {\r\n        extra_style['color'] = 'red';\r\n    }\r\n\r\n    const get_direction = (text) => {\r\n        if (text[0] != null && text[0].search(/[\\u0590-\\u05FF]/) < 0) {\r\n            return \"ltr\";\r\n        }\r\n        return \"rtl\";\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={\"Message \" + messageExtraClasses}>\r\n            <div className=\"message-author\" style={extra_style}>\r\n                {[author]}\r\n            </div>\r\n            <div className=\"message-text\" style={{direction: get_direction(text)}}>\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","const ErrorCodes = {\r\n    OK: 0,\r\n    UNAUTHENTICATED: 100,\r\n    CONVERSATION_CLOSED: 101,\r\n    SCHEMA_ERROR: 102,\r\n    UNIMPLEMENTED: 103,\r\n    CONVERSATION_NOT_INITIALIZED: 104,\r\n    AUTHENTICATION_TIMEOUT: 105,\r\n    AUTH_FAIL_USER_INACTIVE: 106,\r\n    AUTH_FAIL_INVALID_TOKEN: 107,\r\n    INACTIVENESS_TIMEOUT: 108,\r\n    UNKNOWN_ERROR: 109,\r\n\r\n};\r\n\r\n\r\nexport default ErrorCodes;","import React, {useState} from \"react\";\r\n\r\nexport const ChatContext = React.createContext({\r\n    conversationId: 0,\r\n    setConversationId: () => {},\r\n    websocket: null,\r\n    setWebsocket: () => {},\r\n    getNextSequenceNumber: () => {}\r\n});\r\n\r\nconst ChatContextProvider = props => {\r\n    const [conversationId, setConversationId] = useState(0);\r\n    const [websocket, setWebsocket] = useState(null);\r\n    const [sequenceNumber, setSequenceNumber] = useState(1);\r\n\r\n    const getNextSequenceNumber = () => {\r\n        setSequenceNumber(sequenceNumber + 1);\r\n        return sequenceNumber;\r\n    };\r\n\r\n    return <ChatContext.Provider value={{\r\n        conversationId: conversationId,\r\n        setConversationId: setConversationId,\r\n        websocket: websocket,\r\n        setWebsocket: setWebsocket,\r\n        getNextSequenceNumber: getNextSequenceNumber\r\n    }}>\r\n        {props.children}\r\n    </ChatContext.Provider>\r\n};\r\n\r\nexport default ChatContextProvider;","import React, {useContext, useEffect, useRef, useState} from 'react';\r\n\r\nimport './ChatBox.scss';\r\nimport Message from \"./Message\";\r\nimport ErrorCodes from './ErrorCodes'\r\nimport update from 'immutability-helper';\r\nimport crypto from \"crypto\";\r\nimport {ChatContext} from \"./context/chat-context\";\r\nimport soundManger from 'soundmanager2'\r\n\r\nconst ChatBox = () => {\r\n    const [messages, updateMessages] = useState([]);\r\n    const [sound, setSound] = useState(null)\r\n    const namesDictionaryRef = useRef({0: 'הודעת מערכת'});\r\n    const pendingResponseRef = useRef({});\r\n    const chatBoxRef = useRef();\r\n    const websocketRef = useRef();\r\n    const chatContext = useContext(ChatContext);\r\n    const storedUserId = localStorage.getItem('USER_ID');\r\n\r\n    const addPendingResponse = (sequence, callback) => {\r\n        console.log('Adding!');\r\n        let to_append = {};\r\n        to_append[sequence] = callback;\r\n        pendingResponseRef.current = update(pendingResponseRef.current, {$set:to_append});\r\n    };\r\n\r\n    const displayMessage = (message) => {\r\n        return (\r\n            <div key={message.key} className=\"p-2\">\r\n                <Message text={message.text} author={namesDictionaryRef.current[message.user_id]} user_id={message.user_id} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const addToMessageList = (newMessage) => {\r\n        updateMessages(previousMessage => {\r\n            return update(previousMessage, {$push: [newMessage]});\r\n        });\r\n    };\r\n\r\n    const randomizeKey = () => crypto.randomBytes(10).toString('hex');\r\n\r\n    const generateMessage = (user_id, text) => {return {user_id: user_id, 'text': text, key: randomizeKey()}};\r\n    const generateAdminMessage = text => generateMessage(0, text);\r\n\r\n    const handleErrorMessage = (message) => {\r\n        switch (message.payload.error_code) {\r\n            case ErrorCodes.OK:\r\n                if (message.payload.response_to != null) {\r\n                    console.dir(pendingResponseRef.current);\r\n                    console.log(message.payload.response_to);\r\n                    if (message.payload.response_to in pendingResponseRef.current) {\r\n                        pendingResponseRef.current[message.payload.response_to]();\r\n                    } else {\r\n                        console.log('got a success message for seq: ' + message.payload.response_to);\r\n                    }\r\n                }\r\n                break;\r\n            case ErrorCodes.AUTH_FAIL_INVALID_TOKEN:\r\n            case ErrorCodes.AUTH_FAIL_USER_INACTIVE:\r\n                addToMessageList(generateAdminMessage('הסיסמה שניתנה שגויה או שהמשתמש נחסם. מתנתק...'));\r\n                localStorage.removeItem('API_KEY');\r\n                break;\r\n            case ErrorCodes.AUTHENTICATION_TIMEOUT:\r\n                addToMessageList(generateAdminMessage('המערכת נכשלה בהתחברות'));\r\n                break;\r\n            case ErrorCodes.INACTIVENESS_TIMEOUT:\r\n                addToMessageList(generateAdminMessage('מתנתק בעקבות חוסר פעילות...'));\r\n                // leaving conversation\r\n                chatContext.setConversationId(0);\r\n                break;\r\n            default:\r\n                addToMessageList(generateAdminMessage(`Unknown error: ${message.payload.error_code} ${message.payload.error_message}`));\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    const handleUnknownMessage = (message) => {\r\n        addToMessageList(generateAdminMessage('הודעה לא ידועה! :' + JSON.stringify(message)));\r\n    };\r\n\r\n    const sendMatchRequest = () => {\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n        const match_request = JSON.stringify({\r\n            request_type: 'request_match',\r\n            seq: sequenceNumber,\r\n            payload: {}\r\n        });\r\n\r\n        websocketRef.current.send(match_request);\r\n        console.log('match request sent!');\r\n        addPendingResponse(sequenceNumber, onMatchRequest);\r\n    };\r\n\r\n    const onLoginSuccess = () => {\r\n        addToMessageList(generateAdminMessage('התחברת בהצלחה!'));\r\n        sendMatchRequest();\r\n    };\r\n\r\n    const onMatchRequest = () => {\r\n        addToMessageList(generateAdminMessage('מחפש פרטנרים לשיחה...'));\r\n    };\r\n\r\n    const onReceiveMatch = (message) => {\r\n        const userID = localStorage.getItem('USER_ID');\r\n        let attendees = '';\r\n        console.log(message.payload.attendees);\r\n        for (let [attendee_id, attendee_name] of Object.entries(message.payload.attendees)) {\r\n            if (userID !== attendee_id) {\r\n                attendees += attendee_name;\r\n            }\r\n\r\n            let newNameDict = {...namesDictionaryRef.current};\r\n            newNameDict[attendee_id] = attendee_name;\r\n            namesDictionaryRef.current = newNameDict;\r\n        }\r\n\r\n        addToMessageList(generateAdminMessage('אתה מדבר עם ' + attendees));\r\n\r\n        chatContext.setConversationId(message.payload.conversation_id);\r\n    };\r\n\r\n    const onReceiveMessage = (message) => {\r\n        if (sound !== null && message.payload.author_id.toString() !== storedUserId) {\r\n            sound.play();\r\n        }\r\n        addToMessageList(generateMessage(message.payload.author_id, message.payload.text));\r\n    };\r\n\r\n    const onReceiveDisconnect = (message) => {\r\n        console.log(message.payload);\r\n        console.log(namesDictionaryRef.current);\r\n        console.log(namesDictionaryRef.current[message.payload.user_id]);\r\n\r\n        const userName = namesDictionaryRef.current[message.payload.user_id];\r\n        addToMessageList(generateAdminMessage(`${userName} עזב את השיחה.`));\r\n\r\n        chatContext.setConversationId(0);\r\n        sendMatchRequest();\r\n    };\r\n\r\n    const wsOnOpen = (event) => {\r\n        const websocket = websocketRef.current;\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n        const login_request = JSON.stringify({\r\n            request_type: 'authenticate',\r\n            seq: sequenceNumber,\r\n            payload: {'access_token': localStorage.getItem('API_KEY')}\r\n        });\r\n\r\n        websocket.send(login_request);\r\n        addPendingResponse(sequenceNumber, onLoginSuccess);\r\n    };\r\n\r\n    const wsOnClose = (event) => {\r\n        addToMessageList(generateAdminMessage('התנתקת מהשרת, נסה לרפרש את הדף'));\r\n    };\r\n\r\n    const wsOnMessage =(event) => {\r\n        console.log(\"New message: \" + event.data);\r\n        const message = JSON.parse(event.data);\r\n\r\n        switch (message.request_type) {\r\n            case \"error\":\r\n                return handleErrorMessage(message);\r\n            case \"receive_match\":\r\n                return onReceiveMatch(message);\r\n            case 'receive_message':\r\n                return onReceiveMessage(message);\r\n            case \"disconnect\":\r\n                return onReceiveDisconnect(message);\r\n            default:\r\n                return handleUnknownMessage(message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect');\r\n\r\n        if (websocketRef.current === undefined) {\r\n            console.log('setting web socket...');\r\n\r\n            websocketRef.current = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\r\n            addToMessageList({key: randomizeKey(), user_id: 0,'text': 'מתחבר אל השרת...'});\r\n        }\r\n\r\n        websocketRef.current.onopen = wsOnOpen;\r\n        websocketRef.current.onclose = wsOnClose;\r\n        websocketRef.current.onmessage = wsOnMessage;\r\n        chatContext.setWebsocket(websocketRef.current);\r\n\r\n        chatBoxRef.current.scroll({top: chatBoxRef.current.scrollHeight, behavior: 'smooth'});\r\n    }, [websocketRef, wsOnOpen, wsOnClose, wsOnMessage]);\r\n\r\n    useEffect(() => {\r\n        soundManger.soundManager.onready(() => {\r\n            if (sound === null) {\r\n                const newSound = soundManger.soundManager.createSound({\r\n                    url: `${process.env.PUBLIC_URL}/new-message.wav`\r\n                });\r\n                setSound(newSound);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const style = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/chat_bg.png)`\r\n    };\r\n\r\n    return (\r\n        <div className=\"ChatBox\" ref={chatBoxRef} style={style}>\r\n            {messages.map(displayMessage)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, {useState} from 'react';\r\n\r\nconst ResizableTextarea = React.forwardRef((props, ref) => {\r\n    const enterAction = props.enterAction;\r\n    const disabled = props.disabled;\r\n\r\n    const [textareaState, setTextAreaState] = useState({\r\n        rows: props.rows,\r\n        minRows: props.minRows,\r\n        maxRows: props.maxRows,\r\n        value: ''\r\n    });\r\n    const [style, setStyle] = useState({resize: \"none\", width: \"100%\", lineHeight: '24px', direction: \"rtl\"});\r\n    ref.current = [textareaState, setTextAreaState];\r\n\r\n    const get_direction = (textarea) => {\r\n        if (textarea.value[0] != null && textarea.value[0].search(/[\\u0590-\\u05FF]/) < 0) {\r\n            return \"ltr\";\r\n        }\r\n        return \"rtl\";\r\n    };\r\n\r\n    const onKeyPress = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false) {\r\n            e.preventDefault();\r\n            const value = e.target.value;\r\n            enterAction();\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const textareaLineHeight = 24;\r\n        const { minRows, maxRows } = textareaState;\r\n\r\n        const previousRows = event.target.rows;\r\n        event.target.rows = minRows; // reset number of rows in textarea\r\n\r\n        // subtracting vertical padding\r\n        const currentRows = ~~((event.target.scrollHeight - 20) / textareaLineHeight);\r\n\r\n        if (currentRows === previousRows) {\r\n            event.target.rows = currentRows;\r\n        }\r\n\r\n        if (currentRows >= maxRows) {\r\n            event.target.rows = maxRows;\r\n            event.target.scrollTop = event.target.scrollHeight;\r\n        }\r\n\r\n        // Updating states\r\n        setStyle({\r\n            ...style,\r\n            direction: get_direction(event.target)\r\n        });\r\n\r\n        setTextAreaState({\r\n            ...textareaState,\r\n            rows: currentRows < maxRows ? currentRows : maxRows,\r\n            value: event.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <textarea\r\n            disabled={disabled}\r\n            maxLength=\"500\"\r\n            rows={textareaState.rows}\r\n            placeholder='הקלד\\י הודעה'\r\n            className='ResizeableTextarea'\r\n            onKeyDown={onKeyPress}\r\n            onChange={handleChange}\r\n            style={style}\r\n            value={textareaState.value}\r\n        />\r\n    );\r\n});\r\n\r\nexport default ResizableTextarea;","import React, {useContext, useRef} from 'react';\r\nimport ResizableTextarea from \"./ReiszeableTextarea\";\r\n\r\nimport './ChatInput.scss'\r\nimport {ChatContext} from \"./context/chat-context\";\r\n\r\nconst ChatInput = () => {\r\n    const chatContext = useContext(ChatContext);\r\n    const disabled = chatContext.conversationId === 0;\r\n    const textareaRef = useRef();\r\n\r\n    const sendMessage = () => {\r\n        const [textareaState, updateTextareaState] = textareaRef.current;\r\n        const value = textareaState.value;\r\n\r\n        if (disabled || value.length === 0)\r\n            return;\r\n\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n\r\n        let message = JSON.stringify({\r\n            request_type: 'send_message',\r\n            seq: sequenceNumber,\r\n            payload: {\r\n                text: value\r\n            }\r\n        });\r\n\r\n        updateTextareaState({...textareaState, value: ''});\r\n        chatContext.websocket.send(message);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"ChatInput mt-auto\">\r\n            <div className=\"p-2 d-flex\">\r\n                <ResizableTextarea ref={textareaRef} rows=\"1\" minRows=\"1\" maxRows=\"5\" enterAction={sendMessage} disabled={disabled} />\r\n                <div className=\"p2 d-flex align-items-center send-button-wrapper\">\r\n                    <img alt=\"logo\" src={process.env.PUBLIC_URL + '/send_button.png'} className=\"send-button\" onClick={sendMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInput;\r\n","import React, {useState} from 'react';\r\nimport ChatBox from \"./ChatBox\";\r\n\r\nimport './ChatContainer.scss';\r\nimport ChatInput from \"./ChatInput\";\r\nimport axios from  'axios';\r\nimport crypto from 'crypto'\r\n\r\nconst ChatContainer = () => {\r\n    const [pageState, updatePageState] = useState(localStorage.getItem('API_KEY') !== null ? 'chat': 'welcome');\r\n    const [formState, setFormState] = useState({\r\n        fullName: '',\r\n        age: '',\r\n        reasonToIsolation: '',\r\n    });\r\n    const inputChanged = (e) => {\r\n        const targetName = e.target.name;\r\n        setFormState({\r\n            ...formState,\r\n            [targetName]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const username = crypto.randomBytes(10).toString('hex');\r\n        const password = crypto.randomBytes(20).toString('hex');\r\n\r\n        axios.post('/registration/', {\r\n            username: username,\r\n            password1: password,\r\n            password2: password,\r\n            name: formState.fullName,\r\n            reason_to_isolation: formState.reasonToIsolation,\r\n            age: formState.age,\r\n        }).then(response => {\r\n            if (response.status === 201) {\r\n                localStorage.setItem('API_KEY', response.data.key);\r\n                localStorage.setItem('USER_ID', response.data.id);\r\n                updatePageState('chat');\r\n            } else {\r\n                alert(response.status);\r\n            }\r\n        });\r\n    };\r\n\r\n    const render_page = () => {\r\n        switch (pageState) {\r\n            case 'chat':\r\n                return(\r\n                    <div className=\"d-flex flex-column chat-flex\">\r\n                        <ChatBox/>\r\n                        <ChatInput/>\r\n                    </div>\r\n                );\r\n            case 'welcome':\r\n                return(\r\n                    <div className=\"d-flex flex-column chat-flex justify-content-center\">\r\n                        <div className=\"text-center rtl no-chat-windows\">\r\n                            <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"logo\" className=\"logo\" />\r\n                            <p>\r\n                                ברוכים הבאים לאתר Co-Buddies!\r\n                                <br />\r\n                                באתר תוכלו לצ'וטט עם חברים נוספים הנמצאים בבידוד\r\n                            </p>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"p-2\">\r\n                                    <input type=\"text\" onChange={inputChanged} value={formState.fullName} name=\"fullName\" placeholder=\"שם\" className=\"chat-input\" required={true} />\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <input type=\"number\" onChange={inputChanged} value={formState.age} name=\"age\" placeholder=\"גיל\" min=\"1\" className=\"chat-input\" required={true}/>\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <textarea onChange={inputChanged} value={formState.reasonToIsolation} placeholder=\"סיבת בידוד\" name=\"reasonToIsolation\" className=\"chat-input\" maxLength=\"300\" required={true} />\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-lg\" value=\"התחילו לצ'וטט!\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"ChatContainer container\">\r\n            {render_page()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContainer;\r\n","import React from 'react';\r\n\r\nimport './PageFooter.scss';\r\n\r\nconst PageFooter = () => {\r\n    const github_link = \"https://github.com/itay-sho/co-buddies-server\";\r\n    const author_link = \"mailto:itai.sho@gmail.com?subject=האתר co-buddies שלך\";\r\n    return (\r\n        <div className=\"PageFooter fixed-bottom\">\r\n            <div className=\"navbar\">\r\n                <div className=\"float-left\">\r\n                    Developed & designed by <a href={author_link}>Itay Shoshani</a>\r\n                </div>\r\n                <div className=\"float-right\">\r\n                    <a href={github_link}>Contribute</a> to this project\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageFooter;\r\n","import React from 'react';\nimport ChatContainer from \"./ChatContainer\";\nimport PageFooter from \"./PageFooter\";\n\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <ChatContainer />\n            <PageFooter />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios'\nimport ChatContextProvider from \"./context/chat-context\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\n\nReactDOM.render(\n    <ChatContextProvider>\n        <App />\n    </ChatContextProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}