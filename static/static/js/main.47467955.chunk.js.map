{"version":3,"sources":["Message.js","ErrorCodes.js","context/chat-context.js","ChatBox.js","ReiszeableTextarea.js","ChatInput.js","ChatContainer.js","PageFooter.js","App.js","serviceWorker.js","index.js"],"names":["Message","props","text","author","user_id","stored_user_id","localStorage","getItem","message_extra_classes","toString","extra_style","className","style","direction","search","get_direction","ErrorCodes","OK","UNAUTHENTICATED","CONVERSATION_CLOSED","SCHEMA_ERROR","UNIMPLEMENTED","CONVERSATION_NOT_INITIALIZED","AUTHENTICATION_TIMEOUT","AUTH_FAIL_USER_INACTIVE","AUTH_FAIL_INVALID_TOKEN","INACTIVENESS_TIMEOUT","UNKNOWN_ERROR","ChatContext","React","createContext","conversationId","setConversationId","websocket","setWebsocket","getNextSequenceNumber","ChatContextProvider","useState","sequenceNumber","setSequenceNumber","Provider","value","children","ChatBox","messages","updateMessages","namesDictionaryRef","useRef","0","pendingResponseRef","chatBoxRef","websocketRef","chatContext","useContext","addPendingResponse","sequence","callback","console","log","to_append","current","update","$set","addToMessageList","newMessage","previousMessage","$push","randomizeKey","crypto","randomBytes","generateMessage","key","generateAdminMessage","sendMatchRequest","match_request","JSON","stringify","request_type","seq","payload","send","onMatchRequest","onLoginSuccess","wsOnOpen","event","login_request","wsOnClose","wsOnMessage","data","message","parse","error_code","response_to","dir","removeItem","error_message","handleErrorMessage","userID","attendees","Object","entries","attendee_id","attendee_name","newNameDict","conversation_id","onReceiveMatch","author_id","onReceiveMessage","userName","onReceiveDisconnect","handleUnknownMessage","useEffect","undefined","WebSocket","process","onopen","onclose","onmessage","scroll","top","scrollHeight","behavior","backgroundImage","ref","map","ResizableTextarea","forwardRef","enterAction","disabled","rows","minRows","maxRows","textareaState","setTextAreaState","resize","width","lineHeight","setStyle","maxLength","placeholder","onKeyDown","e","keyCode","shiftKey","preventDefault","target","onChange","previousRows","textarea","currentRows","scrollTop","ChatInput","textareaRef","sendMessage","updateTextareaState","length","alt","src","onClick","ChatContainer","pageState","updatePageState","fullName","age","reasonToIsolation","formState","setFormState","inputChanged","targetName","name","handleSubmit","username","password","axios","post","password1","password2","reason_to_isolation","then","response","status","setItem","id","alert","onSubmit","type","required","min","render_page","PageFooter","href","App","Boolean","window","location","hostname","match","defaults","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.47467955.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Message.scss';\r\n\r\nconst Message = (props) => {\r\n    const text = props.text;\r\n    const author = props.author;\r\n    const user_id = props.user_id;\r\n    const stored_user_id = localStorage.getItem('USER_ID');\r\n    const message_extra_classes = (user_id.toString() === stored_user_id) ? \"message-self\": \"message-other\";\r\n\r\n    const extra_style = {};\r\n    if (user_id === 0) {\r\n        extra_style['color'] = 'red';\r\n    }\r\n\r\n    const get_direction = (text) => {\r\n        if (text[0] != null && text[0].search(/[\\u0590-\\u05FF]/) < 0) {\r\n            return \"ltr\";\r\n        }\r\n        return \"rtl\";\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={\"Message \" + message_extra_classes}>\r\n            <div className=\"message-author\" style={extra_style}>\r\n                {[author]}\r\n            </div>\r\n            <div className=\"message-text\" style={{direction: get_direction(text)}}>\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","const ErrorCodes = {\r\n    OK: 0,\r\n    UNAUTHENTICATED: 100,\r\n    CONVERSATION_CLOSED: 101,\r\n    SCHEMA_ERROR: 102,\r\n    UNIMPLEMENTED: 103,\r\n    CONVERSATION_NOT_INITIALIZED: 104,\r\n    AUTHENTICATION_TIMEOUT: 105,\r\n    AUTH_FAIL_USER_INACTIVE: 106,\r\n    AUTH_FAIL_INVALID_TOKEN: 107,\r\n    INACTIVENESS_TIMEOUT: 108,\r\n    UNKNOWN_ERROR: 109,\r\n\r\n};\r\n\r\n\r\nexport default ErrorCodes;","import React, {useState} from \"react\";\r\n\r\nexport const ChatContext = React.createContext({\r\n    conversationId: 0,\r\n    setConversationId: () => {},\r\n    websocket: null,\r\n    setWebsocket: () => {},\r\n    getNextSequenceNumber: () => {}\r\n});\r\n\r\nconst ChatContextProvider = props => {\r\n    const [conversationId, setConversationId] = useState(0);\r\n    const [websocket, setWebsocket] = useState(null);\r\n    const [sequenceNumber, setSequenceNumber] = useState(1);\r\n\r\n    const getNextSequenceNumber = () => {\r\n        setSequenceNumber(sequenceNumber + 1);\r\n        return sequenceNumber;\r\n    };\r\n\r\n    return <ChatContext.Provider value={{\r\n        conversationId: conversationId,\r\n        setConversationId: setConversationId,\r\n        websocket: websocket,\r\n        setWebsocket: setWebsocket,\r\n        getNextSequenceNumber: getNextSequenceNumber\r\n    }}>\r\n        {props.children}\r\n    </ChatContext.Provider>\r\n};\r\n\r\nexport default ChatContextProvider;","import React, {useContext, useEffect, useRef, useState} from 'react';\r\n\r\nimport './ChatBox.scss';\r\nimport Message from \"./Message\";\r\nimport ErrorCodes from './ErrorCodes'\r\nimport update from 'immutability-helper';\r\nimport crypto from \"crypto\";\r\nimport {ChatContext} from \"./context/chat-context\";\r\n\r\nconst ChatBox = () => {\r\n    const [messages, updateMessages] = useState([]);\r\n    const namesDictionaryRef = useRef({0: 'הודעת מערכת'});\r\n    const pendingResponseRef = useRef({});\r\n    const chatBoxRef = useRef();\r\n    const websocketRef = useRef();\r\n    const chatContext = useContext(ChatContext);\r\n\r\n    const addPendingResponse = (sequence, callback) => {\r\n        console.log('Adding!');\r\n        let to_append = {};\r\n        to_append[sequence] = callback;\r\n        pendingResponseRef.current = update(pendingResponseRef.current, {$set:to_append});\r\n    };\r\n\r\n    const displayMessage = (message) => {\r\n        return (\r\n            <div key={message.key} className=\"p-2\">\r\n                <Message text={message.text} author={namesDictionaryRef.current[message.user_id]} user_id={message.user_id} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const addToMessageList = (newMessage) => {\r\n        updateMessages(previousMessage => {\r\n            return update(previousMessage, {$push: [newMessage]});\r\n        });\r\n    };\r\n\r\n    const randomizeKey = () => crypto.randomBytes(10).toString('hex');\r\n\r\n    const generateMessage = (user_id, text) => {return {user_id: user_id, 'text': text, key: randomizeKey()}};\r\n    const generateAdminMessage = text => generateMessage(0, text);\r\n\r\n    const handleErrorMessage = (message) => {\r\n        switch (message.payload.error_code) {\r\n            case ErrorCodes.OK:\r\n                if (message.payload.response_to != null) {\r\n                    console.dir(pendingResponseRef.current);\r\n                    console.log(message.payload.response_to);\r\n                    if (message.payload.response_to in pendingResponseRef.current) {\r\n                        pendingResponseRef.current[message.payload.response_to]();\r\n                    } else {\r\n                        console.log('got a success message for seq: ' + message.payload.response_to);\r\n                    }\r\n                }\r\n                break;\r\n            case ErrorCodes.AUTH_FAIL_INVALID_TOKEN:\r\n            case ErrorCodes.AUTH_FAIL_USER_INACTIVE:\r\n                addToMessageList(generateAdminMessage('הסיסמה שניתנה שגויה או שהמשתמש נחסם. מתנתק...'));\r\n                localStorage.removeItem('API_KEY');\r\n                break;\r\n            case ErrorCodes.AUTHENTICATION_TIMEOUT:\r\n                addToMessageList(generateAdminMessage('המערכת נכשלה בהתחברות'));\r\n                break;\r\n            case ErrorCodes.INACTIVENESS_TIMEOUT:\r\n                addToMessageList(generateAdminMessage('מתנתק בעקבות חוסר פעילות...'));\r\n                // leaving conversation\r\n                chatContext.setConversationId(0);\r\n                break;\r\n            default:\r\n                addToMessageList(generateAdminMessage(`Unknown error: ${message.payload.error_code} ${message.payload.error_message}`));\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    const handleUnknownMessage = (message) => {\r\n        addToMessageList(generateAdminMessage('הודעה לא ידועה! :' + JSON.stringify(message)));\r\n    };\r\n\r\n    const sendMatchRequest = () => {\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n        const match_request = JSON.stringify({\r\n            request_type: 'request_match',\r\n            seq: sequenceNumber,\r\n            payload: {}\r\n        });\r\n\r\n        websocketRef.current.send(match_request);\r\n        console.log('match request sent!');\r\n        addPendingResponse(sequenceNumber, onMatchRequest);\r\n    };\r\n\r\n    const onLoginSuccess = () => {\r\n        addToMessageList(generateAdminMessage('התחברת בהצלחה!'));\r\n        sendMatchRequest();\r\n    };\r\n\r\n    const onMatchRequest = () => {\r\n        addToMessageList(generateAdminMessage('מחפש פרטנרים לשיחה...'));\r\n    };\r\n\r\n    const onReceiveMatch = (message) => {\r\n        const userID = localStorage.getItem('USER_ID');\r\n        let attendees = '';\r\n        console.log(message.payload.attendees);\r\n        for (let [attendee_id, attendee_name] of Object.entries(message.payload.attendees)) {\r\n            if (userID !== attendee_id) {\r\n                attendees += attendee_name;\r\n            }\r\n\r\n            let newNameDict = {...namesDictionaryRef.current};\r\n            newNameDict[attendee_id] = attendee_name;\r\n            namesDictionaryRef.current = newNameDict;\r\n        }\r\n\r\n        addToMessageList(generateAdminMessage('אתה מדבר עם ' + attendees));\r\n\r\n        chatContext.setConversationId(message.payload.conversation_id);\r\n    };\r\n\r\n    const onReceiveMessage = (message) => {\r\n        addToMessageList(generateMessage(message.payload.author_id, message.payload.text))\r\n    };\r\n\r\n    const onReceiveDisconnect = (message) => {\r\n        console.log(message.payload);\r\n        console.log(namesDictionaryRef.current);\r\n        console.log(namesDictionaryRef.current[message.payload.user_id]);\r\n\r\n        const userName = namesDictionaryRef.current[message.payload.user_id];\r\n        addToMessageList(generateAdminMessage(`${userName} עזב את השיחה.`));\r\n\r\n        chatContext.setConversationId(0);\r\n        sendMatchRequest();\r\n    };\r\n\r\n    const wsOnOpen = (event) => {\r\n        const websocket = websocketRef.current;\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n        const login_request = JSON.stringify({\r\n            request_type: 'authenticate',\r\n            seq: sequenceNumber,\r\n            payload: {'access_token': localStorage.getItem('API_KEY')}\r\n        });\r\n\r\n        websocket.send(login_request);\r\n        addPendingResponse(sequenceNumber, onLoginSuccess);\r\n    };\r\n\r\n    const wsOnClose = (event) => {\r\n        addToMessageList(generateAdminMessage('התנתקת מהשרת, נסה לרפרש את הדף'));\r\n    };\r\n\r\n    const wsOnMessage =(event) => {\r\n        console.log(\"New message: \" + event.data);\r\n        const message = JSON.parse(event.data);\r\n\r\n        switch (message.request_type) {\r\n            case \"error\":\r\n                return handleErrorMessage(message);\r\n            case \"receive_match\":\r\n                return onReceiveMatch(message);\r\n            case 'receive_message':\r\n                return onReceiveMessage(message);\r\n            case \"disconnect\":\r\n                return onReceiveDisconnect(message);\r\n            default:\r\n                return handleUnknownMessage(message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect');\r\n\r\n        if (websocketRef.current === undefined) {\r\n            console.log('setting web socket...');\r\n            websocketRef.current = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\r\n            addToMessageList({key: randomizeKey(), user_id: 0,'text': 'מתחבר אל השרת...'});\r\n\r\n        }\r\n\r\n        websocketRef.current.onopen = wsOnOpen;\r\n        websocketRef.current.onclose = wsOnClose;\r\n        websocketRef.current.onmessage = wsOnMessage;\r\n        chatContext.setWebsocket(websocketRef.current);\r\n\r\n        chatBoxRef.current.scroll({top: chatBoxRef.current.scrollHeight, behavior: 'smooth'});\r\n    }, [websocketRef, wsOnOpen, wsOnClose, wsOnMessage]);\r\n\r\n    const style = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/chat_bg.png)`\r\n    };\r\n\r\n    return (\r\n        <div className=\"ChatBox\" ref={chatBoxRef} style={style}>\r\n            {messages.map(displayMessage)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, {useState} from 'react';\r\n\r\nconst ResizableTextarea = React.forwardRef((props, ref) => {\r\n    const enterAction = props.enterAction;\r\n    const disabled = props.disabled;\r\n\r\n    const [textareaState, setTextAreaState] = useState({\r\n        rows: props.rows,\r\n        minRows: props.minRows,\r\n        maxRows: props.maxRows,\r\n        value: ''\r\n    });\r\n    const [style, setStyle] = useState({resize: \"none\", width: \"100%\", lineHeight: '24px', direction: \"rtl\"});\r\n    ref.current = [textareaState, setTextAreaState];\r\n\r\n    const get_direction = (textarea) => {\r\n        if (textarea.value[0] != null && textarea.value[0].search(/[\\u0590-\\u05FF]/) < 0) {\r\n            return \"ltr\";\r\n        }\r\n        return \"rtl\";\r\n    };\r\n\r\n    const onKeyPress = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false) {\r\n            e.preventDefault();\r\n            const value = e.target.value;\r\n            enterAction();\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const textareaLineHeight = 24;\r\n        const { minRows, maxRows } = textareaState;\r\n\r\n        const previousRows = event.target.rows;\r\n        event.target.rows = minRows; // reset number of rows in textarea\r\n\r\n        // subtracting vertical padding\r\n        const currentRows = ~~((event.target.scrollHeight - 20) / textareaLineHeight);\r\n\r\n        if (currentRows === previousRows) {\r\n            event.target.rows = currentRows;\r\n        }\r\n\r\n        if (currentRows >= maxRows) {\r\n            event.target.rows = maxRows;\r\n            event.target.scrollTop = event.target.scrollHeight;\r\n        }\r\n\r\n        // Updating states\r\n        setStyle({\r\n            ...style,\r\n            direction: get_direction(event.target)\r\n        });\r\n\r\n        setTextAreaState({\r\n            ...textareaState,\r\n            rows: currentRows < maxRows ? currentRows : maxRows,\r\n            value: event.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <textarea\r\n            disabled={disabled}\r\n            maxLength=\"500\"\r\n            rows={textareaState.rows}\r\n            placeholder='הקלד\\י הודעה'\r\n            className='ResizeableTextarea'\r\n            onKeyDown={onKeyPress}\r\n            onChange={handleChange}\r\n            style={style}\r\n            value={textareaState.value}\r\n        />\r\n    );\r\n});\r\n\r\nexport default ResizableTextarea;","import React, {useContext, useRef} from 'react';\r\nimport ResizableTextarea from \"./ReiszeableTextarea\";\r\n\r\nimport './ChatInput.scss'\r\nimport {ChatContext} from \"./context/chat-context\";\r\n\r\nconst ChatInput = () => {\r\n    const chatContext = useContext(ChatContext);\r\n    const disabled = chatContext.conversationId === 0;\r\n    const textareaRef = useRef();\r\n\r\n    const sendMessage = () => {\r\n        const [textareaState, updateTextareaState] = textareaRef.current;\r\n        const value = textareaState.value;\r\n\r\n        if (disabled || value.length === 0)\r\n            return;\r\n\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n\r\n        let message = JSON.stringify({\r\n            request_type: 'send_message',\r\n            seq: sequenceNumber,\r\n            payload: {\r\n                text: value\r\n            }\r\n        });\r\n\r\n        updateTextareaState({...textareaState, value: ''});\r\n        chatContext.websocket.send(message);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"ChatInput mt-auto\">\r\n            <div className=\"p-2 d-flex\">\r\n                <ResizableTextarea ref={textareaRef} rows=\"1\" minRows=\"1\" maxRows=\"5\" enterAction={sendMessage} disabled={disabled} />\r\n                <div className=\"p2 d-flex align-items-center send-button-wrapper\">\r\n                    <img alt=\"logo\" src={process.env.PUBLIC_URL + '/send_button.png'} className=\"send-button\" onClick={sendMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInput;\r\n","import React, {useState} from 'react';\r\nimport ChatBox from \"./ChatBox\";\r\n\r\nimport './ChatContainer.scss';\r\nimport ChatInput from \"./ChatInput\";\r\nimport axios from  'axios';\r\nimport crypto from 'crypto'\r\n\r\nconst ChatContainer = () => {\r\n    const [pageState, updatePageState] = useState(localStorage.getItem('API_KEY') !== null ? 'chat': 'welcome');\r\n    const [formState, setFormState] = useState({\r\n        fullName: '',\r\n        age: '',\r\n        reasonToIsolation: '',\r\n    });\r\n    const inputChanged = (e) => {\r\n        const targetName = e.target.name;\r\n        setFormState({\r\n            ...formState,\r\n            [targetName]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const username = crypto.randomBytes(10).toString('hex');\r\n        const password = crypto.randomBytes(20).toString('hex');\r\n\r\n        axios.post('/registration/', {\r\n            username: username,\r\n            password1: password,\r\n            password2: password,\r\n            name: formState.fullName,\r\n            reason_to_isolation: formState.reasonToIsolation,\r\n            age: formState.age,\r\n        }).then(response => {\r\n            if (response.status === 201) {\r\n                localStorage.setItem('API_KEY', response.data.key);\r\n                localStorage.setItem('USER_ID', response.data.id);\r\n                updatePageState('chat');\r\n            } else {\r\n                alert(response.status);\r\n            }\r\n        });\r\n    };\r\n\r\n    const render_page = () => {\r\n        switch (pageState) {\r\n            case 'chat':\r\n                return(\r\n                    <div className=\"d-flex flex-column chat-flex\">\r\n                        <ChatBox/>\r\n                        <ChatInput/>\r\n                    </div>\r\n                );\r\n            case 'welcome':\r\n                return(\r\n                    <div className=\"d-flex flex-column chat-flex justify-content-center\">\r\n                        <div className=\"text-center rtl no-chat-windows\">\r\n                            <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"logo\" className=\"logo\" />\r\n                            <p>\r\n                                ברוכים הבאים לאתר Co-Buddies!\r\n                                <br />\r\n                                באתר תוכלו לצ'וטט עם חברים נוספים הנמצאים בבידוד\r\n                            </p>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"p-2\">\r\n                                    <input type=\"text\" onChange={inputChanged} value={formState.fullName} name=\"fullName\" placeholder=\"שם\" className=\"chat-input\" required={true} />\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <input type=\"number\" onChange={inputChanged} value={formState.age} name=\"age\" placeholder=\"גיל\" min=\"1\" className=\"chat-input\" required={true}/>\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <textarea onChange={inputChanged} value={formState.reasonToIsolation} placeholder=\"סיבת בידוד\" name=\"reasonToIsolation\" className=\"chat-input\" maxLength=\"300\" required={true} />\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-lg\" value=\"התחילו לצ'וטט!\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"ChatContainer container\">\r\n            {render_page()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContainer;\r\n","import React from 'react';\r\n\r\nimport './PageFooter.scss';\r\n\r\nconst PageFooter = () => {\r\n    const github_link = \"https://github.com/itay-sho/co-buddies-server\";\r\n    const author_link = \"mailto:itai.sho@gmail.com?subject=האתר co-buddies שלך\";\r\n    return (\r\n        <div className=\"PageFooter fixed-bottom\">\r\n            <div className=\"navbar\">\r\n                <div className=\"float-left\">\r\n                    Developed & designed by <a href={author_link}>Itay Shoshani</a>\r\n                </div>\r\n                <div className=\"float-right\">\r\n                    <a href={github_link}>Contribute</a> to this project\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageFooter;\r\n","import React from 'react';\nimport ChatContainer from \"./ChatContainer\";\nimport PageFooter from \"./PageFooter\";\n\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <ChatContainer />\n            <PageFooter />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios'\nimport ChatContextProvider from \"./context/chat-context\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\n\nReactDOM.render(\n    <ChatContextProvider>\n        <App />\n    </ChatContextProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}