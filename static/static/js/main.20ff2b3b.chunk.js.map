{"version":3,"sources":["Message.js","ErrorCodes.js","context/chat-context.js","ChatBox.js","ReiszeableTextarea.js","ChatInput.js","ChatContainer.js","PageFooter.js","App.js","index.js"],"names":["Message","props","text","author","userId","user_id","storedUserId","localStorage","getItem","messageExtraClasses","toString","extra_style","className","style","direction","search","get_direction","ErrorCodes","OK","UNAUTHENTICATED","CONVERSATION_CLOSED","SCHEMA_ERROR","UNIMPLEMENTED","CONVERSATION_NOT_INITIALIZED","AUTHENTICATION_TIMEOUT","AUTH_FAIL_USER_INACTIVE","AUTH_FAIL_INVALID_TOKEN","INACTIVENESS_TIMEOUT","UNKNOWN_ERROR","ChatContext","React","createContext","conversationId","setConversationId","shouldRequestMatch","setShouldRequestMatch","websocket","setWebsocket","getNextSequenceNumber","ChatContextProvider","useState","sequenceNumber","setSequenceNumber","Provider","value","children","ChatBox","messages","updateMessages","sound","setSound","pendingMatchRequestId","setPendingMatchRequestId","namesDictionaryRef","useRef","0","pendingResponseRef","chatBoxRef","websocketRef","chatContext","useContext","addPendingResponse","sequence","callback","console","log","to_append","current","update","$set","addToMessageList","newMessage","previousMessage","$push","randomizeKey","crypto","randomBytes","generateMessage","key","generateAdminMessage","has_pending_match_requests","sendMatchRequest","match_request","JSON","stringify","request_type","seq","payload","send","onMatchRequest","onCallbackCalled","message","pending_id","response_to","$unset","onLoginSuccess","getPushNotificationKey","error_code","onReceiveMatch","reponse_to","onUnmatchRequest","attendees","Object","entries","attendee_id","attendee_name","push","newNameDict","conversation_id","length","join","wsOnOpen","login_request","wsOnClose","wsOnMessage","event","data","parse","dir","removeItem","error_message","handleErrorMessage","author_id","play","onReceiveMessage","userName","onReceiveLeave","name","onReceiveJoin","handleUnknownMessage","useCallback","messaging","firebase","getToken","then","token","catch","error","onMessage","useEffect","undefined","WebSocket","process","onopen","onclose","onmessage","scroll","top","scrollHeight","behavior","sendUnmatchRequest","soundManger","soundManager","onready","newSound","createSound","url","backgroundImage","ref","map","ResizableTextarea","forwardRef","enterAction","disabled","rows","minRows","maxRows","textareaState","setTextAreaState","resize","width","lineHeight","setStyle","maxLength","placeholder","onKeyDown","e","keyCode","shiftKey","preventDefault","target","onChange","previousRows","textarea","currentRows","scrollTop","ChatInput","conversationType","textareaRef","sendMessage","updateTextareaState","conversationTypeContainer","htmlFor","type","id","checked","alt","src","onClick","ChatContainer","pageState","updatePageState","fullName","age","reasonToIsolation","formState","setFormState","inputChanged","targetName","handleSubmit","username","password","axios","post","password1","password2","reason_to_isolation","response","status","setItem","alert","onSubmit","required","min","render_page","PageFooter","href","App","defaults","baseURL","render_react_dom","ReactDOM","render","document","getElementById","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","was_react_dom_rendered","navigator","serviceWorker","register","registration","useServiceWorker"],"mappings":"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","file":"static/js/main.20ff2b3b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Message.scss';\r\n\r\nconst Message = (props) => {\r\n    const text = props.text;\r\n    const author = props.author;\r\n    const userId = props.user_id;\r\n    const storedUserId = localStorage.getItem('USER_ID');\r\n    const messageExtraClasses = (userId.toString() === storedUserId) ? \"message-self\": \"message-other\";\r\n\r\n    const extra_style = {};\r\n    if (userId === 0) {\r\n        extra_style['color'] = 'red';\r\n    }\r\n\r\n    const get_direction = (text) => {\r\n        if (text[0] != null && text[0].search(/[\\u0590-\\u05FF]/) < 0) {\r\n            return \"ltr\";\r\n        }\r\n        return \"rtl\";\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={\"Message \" + messageExtraClasses}>\r\n            <div className=\"message-author\" style={extra_style}>\r\n                {[author]}\r\n            </div>\r\n            <div className=\"message-text\" style={{direction: get_direction(text)}}>\r\n                {text}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","const ErrorCodes = {\r\n    OK: 0,\r\n    UNAUTHENTICATED: 100,\r\n    CONVERSATION_CLOSED: 101,\r\n    SCHEMA_ERROR: 102,\r\n    UNIMPLEMENTED: 103,\r\n    CONVERSATION_NOT_INITIALIZED: 104,\r\n    AUTHENTICATION_TIMEOUT: 105,\r\n    AUTH_FAIL_USER_INACTIVE: 106,\r\n    AUTH_FAIL_INVALID_TOKEN: 107,\r\n    INACTIVENESS_TIMEOUT: 108,\r\n    UNKNOWN_ERROR: 109,\r\n\r\n};\r\n\r\n\r\nexport default ErrorCodes;","import React, {useState} from \"react\";\r\n\r\nexport const ChatContext = React.createContext({\r\n    conversationId: -1,\r\n    setConversationId: () => {},\r\n    shouldRequestMatch: true,\r\n    setShouldRequestMatch: () => {},\r\n    websocket: null,\r\n    setWebsocket: () => {},\r\n    getNextSequenceNumber: () => {}\r\n});\r\n\r\nconst ChatContextProvider = props => {\r\n    const [conversationId, setConversationId] = useState(-1);\r\n    const [shouldRequestMatch, setShouldRequestMatch] = useState(true);\r\n    const [websocket, setWebsocket] = useState(null);\r\n    const [sequenceNumber, setSequenceNumber] = useState(1);\r\n\r\n    const getNextSequenceNumber = () => {\r\n        setSequenceNumber(sequenceNumber + 1);\r\n        return sequenceNumber;\r\n    };\r\n\r\n    return <ChatContext.Provider value={{\r\n        conversationId: conversationId,\r\n        setConversationId: setConversationId,\r\n        shouldRequestMatch: shouldRequestMatch,\r\n        setShouldRequestMatch: setShouldRequestMatch,\r\n        websocket: websocket,\r\n        setWebsocket: setWebsocket,\r\n        getNextSequenceNumber: getNextSequenceNumber\r\n    }}>\r\n        {props.children}\r\n    </ChatContext.Provider>\r\n};\r\n\r\nexport default ChatContextProvider;","import React, {useCallback, useContext, useEffect, useRef, useState} from 'react';\r\n\r\nimport './ChatBox.scss';\r\nimport Message from \"./Message\";\r\nimport ErrorCodes from './ErrorCodes'\r\nimport update from 'immutability-helper';\r\nimport crypto from \"crypto\";\r\nimport {ChatContext} from \"./context/chat-context\";\r\nimport soundManger from 'soundmanager2'\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n\r\nconst ChatBox = () => {\r\n    const [messages, updateMessages] = useState([]);\r\n    const [sound, setSound] = useState(null);\r\n    const [pendingMatchRequestId, setPendingMatchRequestId] = useState(null);\r\n    const namesDictionaryRef = useRef({0: 'הודעת מערכת'});\r\n    const pendingResponseRef = useRef({});\r\n    const chatBoxRef = useRef();\r\n    const websocketRef = useRef();\r\n    const chatContext = useContext(ChatContext);\r\n    const storedUserId = localStorage.getItem('USER_ID');\r\n\r\n    const addPendingResponse = (sequence, callback) => {\r\n        console.log('Adding pending response!');\r\n        let to_append = {};\r\n        to_append[sequence] = callback;\r\n        pendingResponseRef.current = update(pendingResponseRef.current, {$set:to_append});\r\n    };\r\n    const removePendingResponse = (pending_id) => {\r\n        console.log('Removing pending response!');\r\n        pendingResponseRef.current = update(pendingResponseRef.current, {$unset: [pending_id]});\r\n    };\r\n\r\n    const displayMessage = (message) => {\r\n        return (\r\n            <div key={message.key} className=\"p-2\">\r\n                <Message text={message.text} author={namesDictionaryRef.current[message.user_id]} user_id={message.user_id} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const addToMessageList = (newMessage) => {\r\n        updateMessages(previousMessage => {\r\n            return update(previousMessage, {$push: [newMessage]});\r\n        });\r\n    };\r\n\r\n    const clearMessagesList = () => {\r\n      updateMessages(() => {\r\n          return [];\r\n      });\r\n    };\r\n\r\n    const randomizeKey = () => crypto.randomBytes(10).toString('hex');\r\n\r\n    const generateMessage = (user_id, text) => {return {user_id: user_id, 'text': text, key: randomizeKey()}};\r\n    const generateAdminMessage = text => generateMessage(0, text);\r\n\r\n    const handleErrorMessage = (message) => {\r\n        switch (message.payload.error_code) {\r\n            case ErrorCodes.OK:\r\n                if (message.payload.response_to != null) {\r\n                    console.dir(pendingResponseRef.current);\r\n                    console.log(message.payload.response_to);\r\n                    if (message.payload.response_to in pendingResponseRef.current) {\r\n                        onCallbackCalled(pendingResponseRef.current[message.payload.response_to], message);\r\n                    } else {\r\n                        console.log('got a success message for seq: ' + message.payload.response_to);\r\n                    }\r\n                }\r\n                break;\r\n            case ErrorCodes.AUTH_FAIL_INVALID_TOKEN:\r\n            case ErrorCodes.AUTH_FAIL_USER_INACTIVE:\r\n                addToMessageList(generateAdminMessage('הסיסמה שניתנה שגויה או שהמשתמש נחסם. מתנתק...'));\r\n                localStorage.removeItem('API_KEY');\r\n                break;\r\n            case ErrorCodes.AUTHENTICATION_TIMEOUT:\r\n                addToMessageList(generateAdminMessage('המערכת נכשלה בהתחברות'));\r\n                break;\r\n            case ErrorCodes.INACTIVENESS_TIMEOUT:\r\n                addToMessageList(generateAdminMessage('מתנתק בעקבות חוסר פעילות...'));\r\n                // leaving conversation\r\n                chatContext.setConversationId(-1);\r\n                break;\r\n            default:\r\n                addToMessageList(generateAdminMessage(`Unknown error: ${message.payload.error_code} ${message.payload.error_message}`));\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    const handleUnknownMessage = (message) => {\r\n        addToMessageList(generateAdminMessage('הודעה לא ידועה! :' + JSON.stringify(message)));\r\n    };\r\n\r\n    const has_pending_match_requests = () => {\r\n        return pendingMatchRequestId !== null\r\n    };\r\n\r\n    const sendMatchRequest = () => {\r\n        if (has_pending_match_requests()) {\r\n            return;\r\n        }\r\n\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n        const match_request = JSON.stringify({\r\n            request_type: 'request_match',\r\n            seq: sequenceNumber,\r\n            payload: {}\r\n        });\r\n\r\n        websocketRef.current.send(match_request);\r\n        console.log('match request sent!');\r\n        addPendingResponse(sequenceNumber, onMatchRequest);\r\n    };\r\n\r\n    const sendUnmatchRequest = () => {\r\n        if (!has_pending_match_requests()) {\r\n            return;\r\n        }\r\n\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n        const match_request = JSON.stringify({\r\n            request_type: 'unrequest_match',\r\n            seq: sequenceNumber,\r\n            payload: {}\r\n        });\r\n\r\n        websocketRef.current.send(match_request);\r\n        console.log('unmatch request sent!');\r\n        addPendingResponse(sequenceNumber, onUnmatchRequest);\r\n    };\r\n\r\n    const onCallbackCalled = (callback, message) => {\r\n        removePendingResponse(message.payload.response_to);\r\n        callback(message)\r\n    };\r\n\r\n    const onLoginSuccess = () => {\r\n        addToMessageList(generateAdminMessage('התחברת בהצלחה!'));\r\n        sendMatchRequest();\r\n        getPushNotificationKey();\r\n    };\r\n\r\n    const onMatchRequest = (message) => {\r\n        if (message.payload.error_code === 0) {\r\n            addToMessageList(generateAdminMessage('מחפש פרטנרים לשיחה...'));\r\n            addPendingResponse(message.payload.response_to, onReceiveMatch);\r\n            setPendingMatchRequestId(message.payload.reponse_to);\r\n        }\r\n    };\r\n\r\n    const onUnmatchRequest = () => {\r\n        addToMessageList(generateAdminMessage('בקשתך להשאר בלובי התקבלה. לא מחפש פרטנרים'));\r\n        setPendingMatchRequestId(null);\r\n    };\r\n\r\n    const onReceiveMatch = (message) => {\r\n        let attendees = [];\r\n        for (let [attendee_id, attendee_name] of Object.entries(message.payload.attendees)) {\r\n            if (storedUserId !== attendee_id) {\r\n                attendees.push(attendee_name);\r\n            }\r\n\r\n            let newNameDict = {...namesDictionaryRef.current};\r\n            newNameDict[attendee_id] = attendee_name;\r\n            namesDictionaryRef.current = newNameDict;\r\n        }\r\n\r\n        clearMessagesList();\r\n\r\n        if (message.payload.conversation_id === 1) {\r\n            addToMessageList(generateAdminMessage('נכנסת ללובי'));\r\n        } else {\r\n            // a real (not lobby) match was found, so the match request isn't pending anymore\r\n            setPendingMatchRequestId(null);\r\n        }\r\n\r\n        if (attendees.length >= 1) {\r\n            addToMessageList(generateAdminMessage('אתה מדבר עם ' + attendees.join(', ')));\r\n        }\r\n\r\n        chatContext.setConversationId(message.payload.conversation_id);\r\n    };\r\n\r\n    const onReceiveMessage = (message) => {\r\n        if (sound !== null && message.payload.author_id.toString() !== storedUserId) {\r\n            sound.play();\r\n        }\r\n        addToMessageList(generateMessage(message.payload.author_id, message.payload.text));\r\n    };\r\n\r\n    const onReceiveLeave = (message) => {\r\n        console.log(message.payload);\r\n        console.log(namesDictionaryRef.current);\r\n        console.log(namesDictionaryRef.current[message.payload.user_id]);\r\n\r\n        const userName = namesDictionaryRef.current[message.payload.user_id];\r\n        addToMessageList(generateAdminMessage(`${userName} עזב את השיחה`));\r\n\r\n        if (chatContext.conversationId !== 1) {\r\n            // moving to lobby\r\n            sendMatchRequest();\r\n        }\r\n    };\r\n\r\n    const onReceiveJoin = (message) => {\r\n        console.log(\"connect message: \", message);\r\n        const userId = message.payload.user_id;\r\n        const name = message.payload.name;\r\n        let newNameDict = {...namesDictionaryRef.current};\r\n        newNameDict[userId] = name;\r\n        namesDictionaryRef.current = newNameDict;\r\n        if (userId.toString() !== storedUserId) {\r\n            addToMessageList(generateAdminMessage(`${name} הצטרף לשיחה`));\r\n        }\r\n    };\r\n\r\n    const wsOnOpen = () => {\r\n        const websocket = websocketRef.current;\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n        const login_request = JSON.stringify({\r\n            request_type: 'authenticate',\r\n            seq: sequenceNumber,\r\n            payload: {'access_token': localStorage.getItem('API_KEY')}\r\n        });\r\n\r\n        websocket.send(login_request);\r\n        addPendingResponse(sequenceNumber, onLoginSuccess);\r\n    };\r\n\r\n    const wsOnClose = () => {\r\n        addToMessageList(generateAdminMessage('התנתקת מהשרת, נסה לרפרש את הדף'));\r\n        chatContext.setConversationId(-1);\r\n    };\r\n\r\n    const wsOnMessage =(event) => {\r\n        console.log(\"New message: \" + event.data);\r\n        const message = JSON.parse(event.data);\r\n\r\n        switch (message.request_type) {\r\n            case \"error\":\r\n                return handleErrorMessage(message);\r\n            case \"receive_match\":\r\n                return onReceiveMatch(message);\r\n            case 'receive_message':\r\n                return onReceiveMessage(message);\r\n            case \"leave\":\r\n                return onReceiveLeave(message);\r\n            case \"join\":\r\n                return onReceiveJoin(message);\r\n            default:\r\n                return handleUnknownMessage(message);\r\n        }\r\n    };\r\n\r\n    const getPushNotificationKey = useCallback(() => {\r\n        const messaging = firebase.messaging();\r\n        messaging.getToken()\r\n            .then((token) =>{\r\n                const sequenceNumber = chatContext.getNextSequenceNumber();\r\n                let message = JSON.stringify({\r\n                    request_type: 'set_pn_token',\r\n                    seq: sequenceNumber,\r\n                    payload: {\r\n                        token: token\r\n                    }\r\n                });\r\n\r\n                chatContext.websocket.send(message);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n        messaging.onMessage((payload) => {\r\n            console.log('message', payload)\r\n        });\r\n    }, [chatContext]);\r\n\r\n    useEffect(() => {\r\n        if (websocketRef.current === undefined) {\r\n            console.log('setting web socket...');\r\n\r\n            websocketRef.current = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\r\n            addToMessageList({key: randomizeKey(), user_id: 0,'text': 'מתחבר אל השרת...'});\r\n        }\r\n\r\n        websocketRef.current.onopen = wsOnOpen;\r\n        websocketRef.current.onclose = wsOnClose;\r\n        websocketRef.current.onmessage = wsOnMessage;\r\n        chatContext.setWebsocket(websocketRef.current);\r\n\r\n        chatBoxRef.current.scroll({top: chatBoxRef.current.scrollHeight, behavior: 'smooth'});\r\n    }, [websocketRef, wsOnOpen, wsOnClose, wsOnMessage]);\r\n\r\n    useEffect(() => {\r\n        if (chatContext.shouldRequestMatch) {\r\n            if (chatContext.conversationId === 1) {\r\n                sendMatchRequest();\r\n            }\r\n        } else {\r\n            console.log('sending unmatch request');\r\n            sendUnmatchRequest();\r\n        }\r\n    }, [chatContext.shouldRequestMatch, chatContext.conversationId]);\r\n\r\n    useEffect(() => {\r\n        soundManger.soundManager.onready(() => {\r\n            if (sound === null) {\r\n                const newSound = soundManger.soundManager.createSound({\r\n                    url: `${process.env.PUBLIC_URL}/new-message.wav`\r\n                });\r\n                setSound(newSound);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const style = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/chat_bg.png)`\r\n    };\r\n\r\n    return (\r\n        <div className=\"ChatBox\" ref={chatBoxRef} style={style}>\r\n            {messages.map(displayMessage)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, {useState} from 'react';\r\n\r\nconst ResizableTextarea = React.forwardRef((props, ref) => {\r\n    const enterAction = props.enterAction;\r\n    const disabled = props.disabled;\r\n\r\n    const [textareaState, setTextAreaState] = useState({\r\n        rows: props.rows,\r\n        minRows: props.minRows,\r\n        maxRows: props.maxRows,\r\n        value: ''\r\n    });\r\n    const [style, setStyle] = useState({resize: \"none\", width: \"100%\", lineHeight: '24px', direction: \"rtl\"});\r\n    ref.current = [textareaState, setTextAreaState];\r\n\r\n    const get_direction = (textarea) => {\r\n        if (textarea.value[0] != null && textarea.value[0].search(/[\\u0590-\\u05FF]/) < 0) {\r\n            return \"ltr\";\r\n        }\r\n        return \"rtl\";\r\n    };\r\n\r\n    const onKeyPress = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false) {\r\n            e.preventDefault();\r\n            const value = e.target.value;\r\n            enterAction();\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const textareaLineHeight = 24;\r\n        const { minRows, maxRows } = textareaState;\r\n\r\n        const previousRows = event.target.rows;\r\n        event.target.rows = minRows; // reset number of rows in textarea\r\n\r\n        // subtracting vertical padding\r\n        const currentRows = ~~((event.target.scrollHeight - 20) / textareaLineHeight);\r\n\r\n        if (currentRows === previousRows) {\r\n            event.target.rows = currentRows;\r\n        }\r\n\r\n        if (currentRows >= maxRows) {\r\n            event.target.rows = maxRows;\r\n            event.target.scrollTop = event.target.scrollHeight;\r\n        }\r\n\r\n        // Updating states\r\n        setStyle({\r\n            ...style,\r\n            direction: get_direction(event.target)\r\n        });\r\n\r\n        setTextAreaState({\r\n            ...textareaState,\r\n            rows: currentRows < maxRows ? currentRows : maxRows,\r\n            value: event.target.value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <textarea\r\n            disabled={disabled}\r\n            maxLength=\"500\"\r\n            rows={textareaState.rows}\r\n            placeholder='הקלד\\י הודעה'\r\n            className='ResizeableTextarea'\r\n            onKeyDown={onKeyPress}\r\n            onChange={handleChange}\r\n            style={style}\r\n            value={textareaState.value}\r\n        />\r\n    );\r\n});\r\n\r\nexport default ResizableTextarea;","import React, {useContext, useRef} from 'react';\r\nimport ResizableTextarea from \"./ReiszeableTextarea\";\r\n\r\nimport './ChatInput.scss'\r\nimport {ChatContext} from \"./context/chat-context\";\r\n\r\nconst ChatInput = () => {\r\n    const chatContext = useContext(ChatContext);\r\n    const disabled = chatContext.conversationId === -1;\r\n    const textareaRef = useRef();\r\n    const sendMessage = () => {\r\n        const [textareaState, updateTextareaState] = textareaRef.current;\r\n        const value = textareaState.value;\r\n\r\n        if (disabled || value.length === 0)\r\n            return;\r\n\r\n        const sequenceNumber = chatContext.getNextSequenceNumber();\r\n\r\n        let message = JSON.stringify({\r\n            request_type: 'send_message',\r\n            seq: sequenceNumber,\r\n            payload: {\r\n                text: value\r\n            }\r\n        });\r\n\r\n        updateTextareaState({...textareaState, value: ''});\r\n        chatContext.websocket.send(message);\r\n    };\r\n\r\n    const updateRequestMatchCheckbox = (event) => {\r\n        chatContext.setShouldRequestMatch(event.target.checked);\r\n    };\r\n\r\n    let conversationType;\r\n    let conversationTypeContainer = null;\r\n    switch (chatContext.conversationId) {\r\n        case 1:\r\n            conversationType = 'חדר המתנה';\r\n            break;\r\n        case -1:\r\n            conversationType = null;\r\n            break;\r\n        default:\r\n            conversationType = 'שיחה פרטית';\r\n    }\r\n    if (conversationType !== null) {\r\n        conversationTypeContainer = (\r\n            <div className=\"row m-0 chat-type\">\r\n                <div className=\"px-2 ml-auto col-6 text-left\">\r\n                    <label className=\"form-check-label\" htmlFor=\"request_match_checkbox\">\r\n                        <b>חפש שיחה אישית</b>\r\n                    </label>\r\n                    <input className=\"form-check-input ml-1\" type=\"checkbox\" id=\"request_match_checkbox\" checked={chatContext.shouldRequestMatch} onChange={updateRequestMatchCheckbox} />\r\n                </div>\r\n                <div className=\"px-2 mr-auto col-6 text-right\">\r\n                    אתה נמצא כעת ב\r\n                    <b>\r\n                        {conversationType}\r\n                    </b>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"ChatInput mt-auto\">\r\n            {conversationTypeContainer}\r\n            <div className=\"p-2 d-flex\">\r\n                <ResizableTextarea ref={textareaRef} rows=\"1\" minRows=\"1\" maxRows=\"5\" enterAction={sendMessage} disabled={disabled} />\r\n                <div className=\"p2 d-flex align-items-center send-button-wrapper\">\r\n                    <img alt=\"logo\" src={process.env.PUBLIC_URL + '/send_button.png'} className=\"send-button\" onClick={sendMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInput;\r\n","import React, {useState} from 'react';\r\nimport ChatBox from \"./ChatBox\";\r\n\r\nimport './ChatContainer.scss';\r\nimport ChatInput from \"./ChatInput\";\r\nimport axios from  'axios';\r\nimport crypto from 'crypto';\r\n\r\nconst ChatContainer = () => {\r\n    const [pageState, updatePageState] = useState(localStorage.getItem('API_KEY') !== null ? 'chat': 'welcome');\r\n    const [formState, setFormState] = useState({\r\n        fullName: '',\r\n        age: '',\r\n        reasonToIsolation: '',\r\n    });\r\n    const inputChanged = (e) => {\r\n        const targetName = e.target.name;\r\n        setFormState({\r\n            ...formState,\r\n            [targetName]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const username = crypto.randomBytes(10).toString('hex');\r\n        const password = crypto.randomBytes(20).toString('hex');\r\n\r\n        axios.post('/registration/', {\r\n            username: username,\r\n            password1: password,\r\n            password2: password,\r\n            name: formState.fullName,\r\n            reason_to_isolation: formState.reasonToIsolation,\r\n            age: formState.age,\r\n        }).then(response => {\r\n            if (response.status === 201) {\r\n                localStorage.setItem('API_KEY', response.data.key);\r\n                localStorage.setItem('USER_ID', response.data.id);\r\n                updatePageState('chat');\r\n            } else {\r\n                alert(response.status);\r\n            }\r\n        });\r\n    };\r\n\r\n    const render_page = () => {\r\n        switch (pageState) {\r\n            case 'chat':\r\n                return(\r\n                    <div className=\"d-flex flex-column chat-flex\">\r\n                        <ChatBox/>\r\n                        <ChatInput/>\r\n                    </div>\r\n                );\r\n            case 'welcome':\r\n                return(\r\n                    <div className=\"d-flex flex-column chat-flex justify-content-center\">\r\n                        <div className=\"text-center rtl no-chat-windows\">\r\n                            <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"logo\" className=\"logo\" />\r\n                            <p>\r\n                                ברוכים הבאים לאתר Co-Buddies!\r\n                                <br />\r\n                                באתר תוכלו לצ'וטט עם חברים נוספים הנמצאים בבידוד\r\n                            </p>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"p-2\">\r\n                                    <input type=\"text\" onChange={inputChanged} value={formState.fullName} name=\"fullName\" placeholder=\"שם\" className=\"chat-input\" required={true} />\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <input type=\"number\" onChange={inputChanged} value={formState.age} name=\"age\" placeholder=\"גיל\" min=\"1\" className=\"chat-input\" required={true}/>\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <textarea onChange={inputChanged} value={formState.reasonToIsolation} placeholder=\"סיבת בידוד\" name=\"reasonToIsolation\" className=\"chat-input\" maxLength=\"300\" required={true} />\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-lg\" value=\"התחילו לצ'וטט!\" />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"ChatContainer container\">\r\n            {render_page()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContainer;\r\n","import React from 'react';\r\n\r\nimport './PageFooter.scss';\r\n\r\nconst PageFooter = () => {\r\n    const github_link = \"https://github.com/itay-sho/co-buddies-server\";\r\n    const author_link = \"mailto:itai.sho@gmail.com?subject=האתר co-buddies שלך\";\r\n    return (\r\n        <div className=\"PageFooter fixed-bottom\">\r\n            <div className=\"navbar\">\r\n                <div className=\"float-left\">\r\n                    Developed & designed by <a href={author_link}>Itay Shoshani</a>\r\n                </div>\r\n                <div className=\"float-right\">\r\n                    <a href={github_link}>Contribute</a> to this project\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageFooter;\r\n","import React from 'react';\nimport ChatContainer from \"./ChatContainer\";\nimport PageFooter from \"./PageFooter\";\n\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <ChatContainer />\n            <PageFooter />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport axios from 'axios'\nimport ChatContextProvider from \"./context/chat-context\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\n\nconst render_react_dom = () => {\n    ReactDOM.render(\n        <ChatContextProvider>\n            <App />\n        </ChatContextProvider>,\n        document.getElementById('root')\n    );\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCkWIV6dQbYlUa-jU07FZfXGJKC8Kpeb7Q\",\n    authDomain: \"co-buddies.firebaseapp.com\",\n    databaseURL: \"https://co-buddies.firebaseio.com\",\n    projectId: \"co-buddies\",\n    storageBucket: \"co-buddies.appspot.com\",\n    messagingSenderId: \"988924831308\",\n    appId: \"1:988924831308:web:e46ac712f53892b40ab6e9\"\n};\n\n// we are rendering react regardless if the serviceworker registration succeeds. the reason that we do that\n// from the beginning is there is a race condition between the useServiceWorker and the getToken call in the react dom\nfirebase.initializeApp(firebaseConfig);\nlet was_react_dom_rendered = false;\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/firebase-messaging-sw.js`).then(registration => {\n        firebase.messaging().useServiceWorker(registration);\n        render_react_dom();\n        was_react_dom_rendered = true;\n    });\n}\nif (!was_react_dom_rendered) {\n    render_react_dom();\n    was_react_dom_rendered = true;\n}\n"],"sourceRoot":""}